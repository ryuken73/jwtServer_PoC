{"version":3,"sources":["pages/Home.js","Loading.js","pages/Login.js","pages/Menu.js","pages/Unauth.js","pages/Download.js","pages/BenchMark.js","pages/Protected.js","Alert.js","App.js","Root.js","reportWebVitals.js","index.js"],"names":["React","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","SimpleBackdrop","props","classes","open","setOpen","message","Backdrop","className","onClick","Box","Copyright","Typography","variant","align","Link","href","Date","getFullYear","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","injectTokenQueryParamenter","token","console","log","axios","defaults","params","accessToken","Login","setTokenValid","showAlert","useAccessTokenIn","setAccessToken","setAccessTokenDecoded","setRefreshTokenDecoded","history","useHistory","useState","userId","setUserId","password","setPassword","accessTokenExpire","setAccessTokenExpire","refreshTokenExpire","setRefreshTokenExpire","isFetching","setIsFetching","returnAccessTokenBy","injectAccessToken","onSubmit","event","setTimeout","post","username","expAccess","expRefresh","then","res","data","authenticated","errMsg","getAccessTokenFromBody","refreshTokenDecoded","getRefreshTokenDecoded","jwt","decode","setupRequest","push","severity","catch","err","error","Container","component","maxWidth","CssBaseline","Avatar","div","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","target","type","onKeyDown","keyCode","FormControlLabel","control","Checkbox","Button","Grid","container","item","xs","Paper","p","fontSize","mt","size","isNaN","parseInt","memo","Menu","onClickLogout","m","to","ml","Unauth","resource","useParams","useCallback","window","localStorage","setItem","now","minWidth","height","Divider","download","Benchmark","mkCounter","reqCount","setReqCount","reqStatus","setReqStatus","publicResult","setPublicResult","privateResult","setPrivateResult","publicProcessed","setPublicProcessed","privateProcessed","setPrivateProcessed","max","current","requestPublic","reqId","get","requestPrivate","runReqPublic","a","reqNumbers","startTime","processed","elapsed","runReqPrivate","ButtonCustom","disabled","children","Intl","NumberFormat","format","Protected","accessTokenDecoded","accessRemainSeconds","setAccessRemainSeconds","refreshRemainSeconds","setRefreshRemainSeconds","useEffect","expAccessTimer","expRefreshTimer","origAccessToken","substr","length","accessTokenExp","exp","refreshTokenExp","setInterval","remainSec","toFixed","clearInterval","Fragment","mb","border","Object","entries","map","key","style","BenchMark","Alert","elevation","root","CustomizedSnackbars","openAlert","setOpenAlert","alertMessage","handleClose","reason","Snackbar","autoHideDuration","onClose","App","syncLogout","e","setAlertMessage","alertSeverity","setAlertSevirity","listenLogout","addEventListener","removeEventListener","interceptor","options","errStatusCode","redirectUrl","interceptors","response","use","status","refreshTokenExpires","Promise","reject","accessTokenExpires","success","config","rest","originalRequestConfig","request","origResponse","axiosRedirectSetup","eject","axiosRedirectRelease","exact","path","Root","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d43d220.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Home(props) {\r\n    console.log('Home re-render: ', props);\r\n\r\n    return (\r\n        <div>\r\n            Home Page\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Home)","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function SimpleBackdrop(props) {\r\n  const classes = useStyles();\r\n  const {open, setOpen, message} = props;\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n        <Box>{message}</Box>\r\n    </Backdrop>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router';\r\nimport Loading from '../Loading';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst injectTokenQueryParamenter = token => {\r\n  console.log('injectTokenQueryParamenter:', token)\r\n  axios.defaults.params = {\r\n    ...axios.defaults.params,\r\n    accessToken: token\r\n  }\r\n}\r\n\r\nfunction Login(props) {\r\n  const {\r\n    setTokenValid,\r\n    showAlert,\r\n    useAccessTokenIn,\r\n    setAccessToken,\r\n    setAccessTokenDecoded,\r\n    setRefreshTokenDecoded\r\n  } = props;\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [userId, setUserId] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [accessTokenExpire, setAccessTokenExpire] = React.useState(10);\r\n  const [refreshTokenExpire, setRefreshTokenExpire] = React.useState(60);\r\n  const [isFetching, setIsFetching] = React.useState(false);\r\n\r\n  const onChangeId = event => setUserId(event.target.value);\r\n  const onChangePassword = event => setPassword(event.target.value);\r\n\r\n  const onKeyUp = event => {\r\n    if(event.keyCode === 13){\r\n      onSubmit();\r\n    }\r\n  }\r\n\r\n  const returnAccessTokenBy = 'body'; // cookie\r\n  const getAccessTokenFromBody = res => res.data.accessToken;\r\n  const getRefreshTokenDecoded = res => res.data.refreshTokenDecoded;\r\n  const injectAccessToken = {\r\n    'query' : injectTokenQueryParamenter,\r\n    'cookie' : () => {},\r\n    'header' : () => {}\r\n  }\r\n\r\n  const onChangeAccessTokenExp = event => {\r\n    console.log(event.target.value);\r\n    if(event.target.value === ''){\r\n      setAccessTokenExpire(0);\r\n      return\r\n    }\r\n    if(!isNaN(parseInt(event.target.value))){\r\n      setAccessTokenExpire(parseInt(event.target.value));\r\n    }\r\n  }\r\n  \r\n  const onChangeRefreshTokenExp = event => {\r\n    console.log(event.target.value);\r\n    if(event.target.value === ''){\r\n      setRefreshTokenExpire(0);\r\n      return\r\n    }\r\n    if(!isNaN(parseInt(event.target.value))){\r\n      setRefreshTokenExpire(parseInt(event.target.value));\r\n    }\r\n  }\r\n\r\n\r\n  const onSubmit = event => {\r\n    console.log('submit:', userId, password);\r\n    setIsFetching(true);\r\n    setTimeout(() => {\r\n      axios.post('/login', {\r\n          username: userId,\r\n          password: password,\r\n          expAccess: accessTokenExpire,\r\n          expRefresh: refreshTokenExpire,\r\n          returnAccessTokenBy\r\n      }).\r\n      then(res => {\r\n          console.log(res.data);\r\n          const {authenticated, errMsg} = res.data;\r\n          if(authenticated === true){\r\n            if(returnAccessTokenBy === 'body'){\r\n              const accessToken = getAccessTokenFromBody(res);                \r\n              const refreshTokenDecoded = getRefreshTokenDecoded(res);\r\n              setAccessToken(accessToken);\r\n              setAccessTokenDecoded(jwt.decode(accessToken));\r\n              setRefreshTokenDecoded(refreshTokenDecoded);\r\n              const setupRequest = injectAccessToken[useAccessTokenIn];\r\n              setupRequest(accessToken);\r\n            }\r\n            setTokenValid(true)\r\n            history.push('/pages/private/portal');\r\n            setIsFetching(false)\r\n            showAlert({severity:'success', message: 'login success!'})\r\n            return;\r\n          }\r\n          setIsFetching(false)\r\n          showAlert({severity:'error', message: errMsg})\r\n      })\r\n      .catch(err => {\r\n          console.error(err)\r\n          setIsFetching(false)\r\n      })\r\n    }, 300)\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      {isFetching && <Loading open={isFetching} message={\"Check Authenticated..\"}></Loading> }\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <div className={classes.div} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={userId}\r\n            onChange={onChangeId}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={onChangePassword}\r\n            onKeyDown={onKeyUp}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={onSubmit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      <Paper width=\"90%\">\r\n        <Box p=\"10px\" fontSize=\"12px\" mt=\"10px\">\r\n          <Box display=\"flex\" alignItems=\"center\" width=\"100%\">\r\n            <Box width=\"100%\">Access Token Expires in(sec)</Box>\r\n            <Box width=\"100%\">\r\n              <TextField variant=\"outlined\" size=\"small\" margin=\"dense\" value={accessTokenExpire} onChange={onChangeAccessTokenExp}></TextField>\r\n            </Box>\r\n          </Box>\r\n          <Box display=\"flex\" alignItems=\"center\" width=\"100%\">\r\n            <Box width=\"100%\">Refresh Token Expires in(sec)</Box>\r\n            <Box width=\"100%\">\r\n              <TextField variant=\"outlined\" size=\"small\" margin=\"dense\" value={refreshTokenExpire} onChange={onChangeRefreshTokenExp}></TextField>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default React.memo(Login)","import React, { Component } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction Menu(props){\r\n    const {onClickLogout} = props;\r\n    return (\r\n        <Box display=\"flex\">\r\n            <Box m=\"5px\"><NavLink to=\"/pages/private/portal\">Portal</NavLink></Box>\r\n            <Box m=\"5px\"><NavLink to=\"/pages/unauth/unauth-download\">Unauth-Download</NavLink></Box>\r\n            <Box m=\"5px\"><NavLink to=\"/pages/private/private-download\">Private-Download</NavLink></Box>\r\n            <Box m=\"5px\"><NavLink to=\"/pages/private/benchmark\">Benchmark</NavLink></Box>\r\n            <Box ml=\"auto\"><Button onClick={onClickLogout}>logout</Button></Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {useParams} from 'react-router-dom';\r\nimport Menu from './Menu';\r\nimport axios from 'axios';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nfunction Unauth(props) {\r\n    const {resource} = useParams();\r\n    const history = useHistory();\r\n\r\n    const onClickLogout = React.useCallback(() => {\r\n        axios.defaults.params = {\r\n            ...axios.defaults.params,\r\n            accessToken: ''\r\n        }\r\n        window.localStorage.setItem('logout', Date.now());\r\n        history.push('/pages/login')\r\n    },[])\r\n\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\" m=\"auto\" mt=\"80px\" minWidth=\"550px\" width=\"40%\">\r\n            <Box height={\"255px\"}></Box>\r\n            <Divider/>\r\n            <Box fontSize=\"30px\" mt=\"10px\">\r\n                {resource} page\r\n            </Box>\r\n            <Menu onClickLogout={onClickLogout}></Menu>\r\n            {/* {resource === 'unauth-download' && <Button variant=\"outlined\" onClick={downloadUnauth}>{resource}</Button>} */}\r\n            {resource === 'unauth-download' && <a href=\"/public/download/sample.txt\" download>download file</a>}\r\n        </Box>           \r\n    )\r\n}\r\n\r\nexport default React.memo(Unauth)","import React from 'react';\r\n\r\nfunction Download(props) {\r\n    const {unauth} = props;\r\n    return (\r\n        <div>\r\n            Download Page\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Download)","import React from 'react'\r\nimport Box from '@material-ui/core/Box'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport axios from 'axios';\r\n\r\nfunction Benchmark() {\r\n\r\n    const [reqCount, setReqCount] = React.useState(100);\r\n    const [reqStatus, setReqStatus] = React.useState('stopped');\r\n    const [publicResult, setPublicResult] = React.useState(0);\r\n    const [privateResult, setPrivateResult] = React.useState(0);\r\n    const [publicProcessed, setPublicProcessed] = React.useState(0);\r\n    const [privateProcessed, setPrivateProcessed] = React.useState(0);\r\n\r\n    const onChangeReqCount = event => {\r\n        setReqCount(event.target.value);\r\n    }\r\n\r\n    function* mkCounter(max){\r\n        let current = 0;\r\n        while(current < max){\r\n            yield current;\r\n            current += 1;\r\n        }\r\n    }\r\n\r\n    const requestPublic = reqId => {\r\n        return axios.get(`/public/echo/${reqId}`)\r\n    }\r\n\r\n    const requestPrivate = reqId => {\r\n        return axios.get(`/private/echo/${reqId}`)\r\n    }\r\n\r\n    const runReqPublic = React.useCallback(async () => {\r\n        setReqStatus('started');\r\n        const reqNumbers = mkCounter(reqCount);\r\n        const startTime = Date.now();\r\n        setPublicResult(0)\r\n        setPublicProcessed(0)\r\n        for await (let reqId of reqNumbers){\r\n            await requestPublic(reqId); \r\n            setPublicProcessed(processed => processed + 1)\r\n        }\r\n\r\n        const elapsed = Date.now() - startTime;\r\n        setPublicResult(elapsed);\r\n        setReqStatus('stopped');\r\n    },[reqCount])\r\n\r\n    \r\n    const runReqPrivate = React.useCallback(async () => {\r\n        setReqStatus('started');\r\n        const reqNumbers = mkCounter(reqCount);\r\n        const startTime = Date.now();\r\n        setPrivateResult(0)\r\n        setPrivateProcessed(0)\r\n        for await (let reqId of reqNumbers){\r\n            await requestPrivate(reqId); \r\n            setPrivateProcessed(processed => processed + 1)\r\n        }\r\n\r\n        const elapsed = Date.now() - startTime;\r\n        setPrivateResult(elapsed);\r\n        setReqStatus('stopped');\r\n    },[reqCount])\r\n\r\n    const ButtonCustom = (props) => {\r\n        return (\r\n        <Button \r\n            disabled={reqStatus === 'started'} \r\n            variant=\"contained\" \r\n            size=\"small\" \r\n            color=\"primary\" \r\n            {...props}\r\n        >\r\n            {props.children}\r\n        </Button>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\" m=\"5px\">\r\n            <Box>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    label=\"request count\" \r\n                    margin=\"dense\" \r\n                    size=\"small\"\r\n                    value={reqCount}\r\n                    onChange={onChangeReqCount}\r\n                ></TextField>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" m=\"5px\"> \r\n                <Box width=\"100px\">Echo(Public)</Box>\r\n                <ButtonCustom onClick={runReqPublic}>Start</ButtonCustom>\r\n                <Box width=\"auto\" ml=\"10px\">Result: {new Intl.NumberFormat().format(publicResult)} msec   [{publicProcessed}]</Box>\r\n\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" m=\"5px\">\r\n                <Box width=\"100px\">Echo(Private)</Box>\r\n                <ButtonCustom onClick={runReqPrivate}>Start</ButtonCustom>\r\n                <Box width=\"auto\" ml=\"10px\">Result: {new Intl.NumberFormat().format(privateResult)} msec   [{privateProcessed}]</Box>\r\n\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default React.memo(Benchmark)\r\n","import React from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from './Menu';\r\nimport Download from './Download';\r\nimport BenchMark from './BenchMark';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useHistory } from 'react-router';\r\nimport axios from 'axios';\r\n\r\nfunction Protected(props) {\r\n    console.log('Protected re-render: ', props);\r\n    const {accessToken, accessTokenDecoded} = props;\r\n    const {setAccessToken, setAccessTokenDecoded, setRefreshTokenDecoded} = props;\r\n    const {refreshTokenDecoded} = props;\r\n    const history = useHistory();\r\n    const {resource} = useParams();\r\n    const [isFetching, setIsFetching] = React.useState(true);\r\n    const [accessRemainSeconds, setAccessRemainSeconds] = React.useState('calculating.');\r\n    const [refreshRemainSeconds, setRefreshRemainSeconds] = React.useState('calculating.');\r\n\r\n    React.useEffect(() => {\r\n        if(accessTokenDecoded === '' || refreshTokenDecoded === ''){\r\n            return\r\n        }\r\n        let expAccessTimer, expRefreshTimer;\r\n\r\n        const origAccessToken = refreshTokenDecoded.accessToken;\r\n        refreshTokenDecoded.accessToken = \r\n        origAccessToken.substr(1,10) + \r\n        '...' +  \r\n        origAccessToken.substr(origAccessToken.length -5)\r\n        const accessTokenExp = accessTokenDecoded.exp;\r\n        const refreshTokenExp = refreshTokenDecoded.exp;\r\n        expAccessTimer = setInterval(() => {\r\n            const remainSec = parseInt((accessTokenExp*1000 - Date.now())/1000).toFixed(0);\r\n            console.log('####', remainSec, accessTokenExp*1000, Date.now())\r\n            if(remainSec <= 0) {\r\n                setAccessRemainSeconds('expired');\r\n                return\r\n            }\r\n            setAccessRemainSeconds(remainSec);\r\n        },1000)\r\n        expRefreshTimer = setInterval(() => {\r\n            const remainSec = parseInt((refreshTokenExp*1000 - Date.now())/1000).toFixed(0);\r\n            if(remainSec <= 0) {\r\n                setRefreshRemainSeconds('expired');\r\n                return\r\n            }\r\n            setRefreshRemainSeconds(remainSec);\r\n        },1000)\r\n        return () => {\r\n            console.log('dismount Protected')\r\n            clearInterval(expAccessTimer);\r\n            clearInterval(expRefreshTimer);\r\n        }\r\n    },[accessTokenDecoded, refreshTokenDecoded]);\r\n\r\n    React.useEffect(() => {        \r\n        axios.get('/private')\r\n        .then(res => {\r\n            console.log(res);\r\n            if(refreshTokenDecoded === ''){\r\n                // refresh(F5) occurred. need to set accessToken and refreshToken;\r\n                const {refreshTokenDecoded, accessTokenDecoded} = res.data;\r\n                const origAccessToken = refreshTokenDecoded.accessToken;\r\n                setAccessToken(origAccessToken)\r\n                refreshTokenDecoded.accessToken = \r\n                origAccessToken.substr(1,10) + \r\n                '...' +  \r\n                origAccessToken.substr(origAccessToken.length -5)               \r\n                setAccessTokenDecoded(accessTokenDecoded);\r\n                setRefreshTokenDecoded(refreshTokenDecoded);\r\n            }\r\n            setIsFetching(false);\r\n        })\r\n        .catch(err => {\r\n            setIsFetching(false);\r\n            console.log(err)\r\n        })\r\n\r\n    },[resource])\r\n\r\n    const onClickLogout = React.useCallback(() => {\r\n        axios.defaults.params = {\r\n            ...axios.defaults.params,\r\n            accessToken: ''\r\n        }\r\n        window.localStorage.setItem('logout', Date.now());\r\n        history.push('/pages/login')\r\n    },[])\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\" m=\"auto\" mt=\"80px\" minWidth=\"550px\" width=\"40%\">\r\n            {isFetching === false &&      \r\n            <React.Fragment>\r\n                <Box display=\"flex\" mb=\"10px\">\r\n                    <Box display=\"flex\" flexDirection=\"column\" width=\"50%\" m=\"5px\">\r\n                        <Box color={accessRemainSeconds==='expired' && 'red'} mb=\"5px\">Access Token: remains [{accessRemainSeconds}]</Box>\r\n                        <Box border={1}>\r\n                            {Object.entries(accessTokenDecoded).map(([key, value]) => {\r\n                                return (\r\n                                    <Box p=\"3px\" display=\"flex\">\r\n                                            <Box>{key} :</Box>\r\n                                            <Box>{value}</Box>\r\n                                    </Box>\r\n                                )\r\n                            })}\r\n                        </Box>\r\n                    </Box>\r\n                    <Box display=\"flex\" flexDirection=\"column\" width=\"50%\" m=\"5px\">\r\n                        <Box color={refreshRemainSeconds==='expired' && 'red'} mb=\"5px\">Refresh Token: remains [{refreshRemainSeconds}]</Box>\r\n                        <Box border={1}>\r\n                            {Object.entries(refreshTokenDecoded).map(([key, value]) => {\r\n                                return (\r\n                                    <Box p=\"3px\" display=\"flex\">\r\n                                            <Box>{key} :</Box>\r\n                                            <Box>{value}</Box>\r\n                                    </Box>\r\n                                )\r\n                            })}\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n\r\n\r\n                <Divider/>\r\n                <Box fontSize=\"30px\" mt=\"10px\">\r\n                    {resource} page\r\n                </Box>\r\n                <Menu onClickLogout={onClickLogout}></Menu>\r\n                {resource === 'portal' && (\r\n                    <Box style={{\"word-wrap\":\"break-word\"}}>access token: {axios.defaults.params.accessToken}</Box>\r\n                )}\r\n                {resource === 'private-download' && (\r\n                    <React.Fragment>\r\n                        <a href={`/private/download/sample.txt?accessToken=${accessToken}`} >download file(401)</a>\r\n                        <a href={`/private/static/download/sample.txt?accessToken=${accessToken}`} >download file(302)</a>\r\n                    </React.Fragment>\r\n                )}\r\n                {resource === 'benchmark' && <BenchMark></BenchMark>}\r\n\r\n\r\n            </React.Fragment>\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default React.memo(Protected)","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars(props) {\r\n  const classes = useStyles();\r\n  const {openAlert, setOpenAlert, severity='info', alertMessage=''} = props;\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenAlert(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={openAlert} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert severity={severity} onClose={handleClose}>{alertMessage}</Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport {Route, Switch, useHistory} from 'react-router-dom';\r\nimport Box from '@material-ui/core/Box'\r\nimport AuthRoute from './AuthRoute';\r\nimport {Login, Protected, Unauth} from './pages';\r\nimport Loading from './Loading';\r\nimport Alert from './Alert';\r\nimport axios from 'axios';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nexport default function App(props) {\r\n  console.log('App re-render:', props);\r\n  const history = useHistory();\r\n  const [accessToken, setAccessToken] = React.useState('');\r\n  const [accessTokenDecoded, setAccessTokenDecoded] = React.useState('');\r\n  const [refreshTokenDecoded, setRefreshTokenDecoded] = React.useState('');\r\n\r\n  const syncLogout = e => {\r\n    if (e.key === 'logout') {\r\n      console.log('logged out from storage!')\r\n      history.push('/pages/login');\r\n    }\r\n  }\r\n\r\n  const axiosRedirectSetup = options => {\r\n    const {axios,  errStatusCode, redirectUrl} = options;\r\n    axios.interceptors.response.use(\r\n      // 200 resposne. just pass response\r\n      function(response){\r\n        console.log('### in intercepter:', response)\r\n        return response;\r\n      },\r\n      async function(error){\r\n      // not 200 response.\r\n        console.log(error.response)\r\n        // if response code is refresh token expired, then redirect login page.\r\n        if(error.response.status === errStatusCode.refreshTokenExpires){\r\n          history.push(redirectUrl);\r\n          return Promise.reject(error);\r\n        }\r\n        // if response code is access token expired, then request refresh token and resend request.\r\n        if(error.response.status === errStatusCode.accessTokenExpires){\r\n          const response = await axios.post('/refreshToken', {returnAccessTokenBy: 'body'});\r\n          const {success, accessToken} = response.data;\r\n          if(success){\r\n            // set new access token (to refresh Protected component)\r\n            setAccessToken(accessToken);\r\n            setAccessTokenDecoded(jwt.decode(accessToken));\r\n            // replace default access token query parameter with new access token.\r\n            axios.defaults.params = {\r\n              ...axios.defaults.params,\r\n              accessToken\r\n            }\r\n            // setup new request config. using error.config, we can resend original request.\r\n            const {params, ...rest} = error.config;\r\n            // manually set new access token for resend request\r\n            const originalRequestConfig = {\r\n              params: {...params, accessToken},\r\n              ...rest\r\n            }   \r\n            // resend original request\r\n            const origResponse = await axios.request(originalRequestConfig);\r\n            // following response comes in original axios.method return\r\n            return origResponse;       \r\n          }\r\n        }\r\n        // if response is anything else, reject (comes in original axios's catch block)\r\n        return Promise.reject(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  const axiosRedirectRelease = interceptor => {\r\n    axios.interceptors.response.eject(interceptor);\r\n  }\r\n\r\n  const [isFetching, setIsFetching] = React.useState(true);\r\n  const [tokenValid, setTokenValid] = React.useState(false);\r\n  const [openAlert, setOpenAlert] = React.useState(false);\r\n  const [alertMessage, setAlertMessage] = React.useState('');\r\n  const [alertSeverity, setAlertSevirity] = React.useState('info');\r\n  const [useAccessTokenIn, setUseAccessTokenIn] = React.useState('query')\r\n\r\n  React.useEffect(() => {\r\n    axios.defaults.params = {\r\n      ...axios.defaults.params,\r\n      useAccessTokenIn\r\n    }\r\n  },[useAccessTokenIn])\r\n\r\n  React.useEffect(() => {\r\n    const listenLogout = window.addEventListener('storage', syncLogout);\r\n    return () => {\r\n      window.removeEventListener('storage', listenLogout)\r\n    }\r\n  },[])\r\n\r\n  React.useEffect(() => {\r\n    const errStatusCode = {\r\n      'refreshTokenExpires': 401,\r\n      'accessTokenExpires': 499\r\n    }\r\n    const interceptor = axiosRedirectSetup({axios, errStatusCode, redirectUrl:'/pages/login'})\r\n    axios.get('/decodeToken')\r\n    .then(res => {\r\n        const {authenticated} = res.data;\r\n        console.log('#######:', res.data)\r\n        if(authenticated === true){\r\n            setTimeout(() => {\r\n              console.log('##### setting token valid true')\r\n              setTokenValid(true);\r\n              setIsFetching(false);\r\n            },300)\r\n        } else {\r\n          setTimeout(() => {\r\n            setTokenValid(false);\r\n            setIsFetching(false);\r\n          },300)\r\n        }\r\n    })\r\n    .catch(err => {\r\n        setTimeout(() => {\r\n          showAlert({severity:'error', message: err.message})\r\n          setTokenValid(false)\r\n          setIsFetching(false);\r\n        }, 300)\r\n\r\n    })\r\n\r\n    return () => {\r\n      axiosRedirectRelease(interceptor)\r\n    }\r\n  },[]) \r\n\r\n  const showAlert = options => {\r\n    const {message, severity} = options;\r\n    setAlertMessage(message);\r\n    setAlertSevirity(severity);\r\n    setOpenAlert(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {isFetching ? \r\n        <Loading open={isFetching} message={\"Check Authenticated..\"}></Loading> :\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Login showAlert={showAlert} setTokenValid={setTokenValid} useAccessTokenIn={useAccessTokenIn}></Login> \r\n          </Route> \r\n          <Route exact path=\"/pages/login\">\r\n            <Login \r\n              showAlert={showAlert} \r\n              setTokenValid={setTokenValid} \r\n              useAccessTokenIn={useAccessTokenIn} \r\n              setAccessToken={setAccessToken}\r\n              setAccessTokenDecoded={setAccessTokenDecoded}\r\n              setRefreshTokenDecoded={setRefreshTokenDecoded}\r\n            ></Login>\r\n          </Route>\r\n          <Route \r\n            setTokenValid={setTokenValid} \r\n            showAlert={showAlert} \r\n            path=\"/pages/private/:resource\"\r\n          >\r\n            <Protected \r\n              accessToken={accessToken} \r\n              setAccessToken={setAccessToken}\r\n              setAccessTokenDecoded={setAccessTokenDecoded}\r\n              setRefreshTokenDecoded={setRefreshTokenDecoded}\r\n              accessTokenDecoded={accessTokenDecoded} \r\n              refreshTokenDecoded={refreshTokenDecoded}\r\n            ></Protected>\r\n          </Route>\r\n          <Route \r\n            showAlert={showAlert} \r\n            path=\"/pages/unauth/:resource\"\r\n          >\r\n            <Unauth></Unauth>\r\n          </Route>\r\n          {/* <AuthRoute \r\n            tokenValid={tokenValid} \r\n            setTokenValid={setTokenValid} \r\n            showAlert={showAlert} \r\n            path=\"/pages/private/:resource\"\r\n          >\r\n            <Protected></Protected>\r\n          </AuthRoute> */}\r\n        </Switch>\r\n      }\r\n      <Alert\r\n        openAlert={openAlert}\r\n        setOpenAlert={setOpenAlert}\r\n        alertMessage={alertMessage}\r\n        severity={alertSeverity}\r\n      ></Alert>\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport App from './App';\r\n\r\nfunction Root() {\r\n    return (\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default React.memo(Root)\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
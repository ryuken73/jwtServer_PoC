{"version":3,"sources":["AuthRoute.js","pages/Home.js","Loading.js","pages/Login.js","pages/BenchMark.js","pages/Protected.js","Alert.js","App.js","Root.js","reportWebVitals.js","index.js"],"names":["AuthRoute","props","console","log","children","tokenValid","setTokenValid","rest","React","useEffect","axios","get","then","res","data","catch","err","render","location","to","pathname","state","from","memo","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","SimpleBackdrop","classes","open","setOpen","message","Backdrop","className","onClick","Box","Copyright","Typography","variant","align","Link","href","Date","getFullYear","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","injectTokenQueryParamenter","token","defaults","params","accessToken","Login","showAlert","useAccessTokenIn","history","useHistory","useState","userId","setUserId","password","setPassword","accessTokenExpire","setAccessTokenExpire","refreshTokenExpire","setRefreshTokenExpire","isFetching","setIsFetching","returnAccessTokenBy","injectAccessToken","onSubmit","event","setTimeout","post","username","expAccess","expRefresh","authenticated","errMsg","getAccessTokenFromBody","setupRequest","push","severity","error","Container","component","maxWidth","CssBaseline","Avatar","div","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","target","type","onKeyDown","keyCode","FormControlLabel","control","Checkbox","Button","Grid","container","item","xs","Paper","p","fontSize","mt","size","isNaN","parseInt","Benchmark","mkCounter","reqCount","setReqCount","setReqStatus","publicResult","setPublicResult","privateResult","max","current","requestPublic","reqId","runReqPublic","useCallback","a","reqNumbers","startTime","now","elapsed","m","ml","Protected","resource","useParams","accessTokenDecoded","setAccessTokenDecoded","refreshTokenDecoded","setRefreshTokenDecoded","accessRemainSeconds","setAccessRemainSeconds","refreshRemainSeconds","setRefreshRemainSeconds","expAccessTimer","origAccessToken","substr","length","accessTokenExp","exp","refreshTokenExp","setInterval","remainSec","toFixed","clearInterval","Fragment","mb","elevation","Object","entries","map","key","Divider","BenchMark","Alert","root","CustomizedSnackbars","openAlert","setOpenAlert","alertMessage","handleClose","reason","Snackbar","autoHideDuration","onClose","App","setAlertMessage","alertSeverity","setAlertSevirity","interceptor","options","errStatusCode","redirectUrl","interceptors","response","use","status","refreshTokenExpires","Promise","reject","accessTokenExpires","success","config","originalRequestConfig","request","origResponse","axiosRedirectSetup","eject","axiosRedirectRelease","exact","path","Root","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b43a706.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction AuthRoute(props) {\r\n    console.log('AuthRoute re-render: ', props);\r\n    const {\r\n        children,\r\n        tokenValid=false,\r\n        setTokenValid=()=>{},\r\n        ...rest\r\n    } = props;\r\n    React.useEffect(() => {\r\n        axios.get('/decodeToken')\r\n        .then(res => {\r\n            const authenticated = res.data;\r\n            if(authenticated){\r\n                setTokenValid(true)\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            setTokenValid(false)\r\n        })\r\n    },[setTokenValid])\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({location}) => \r\n                tokenValid ? (children) :\r\n                (<Redirect\r\n                    to={{\r\n                        pathname: '/pages/login',\r\n                        state: {from: location}\r\n                    }}\r\n                ></Redirect>)\r\n            }\r\n        >            \r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default React.memo(AuthRoute)","import React from 'react'\r\n\r\nfunction Home(props) {\r\n    console.log('Home re-render: ', props);\r\n\r\n    return (\r\n        <div>\r\n            Home Page\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Home)","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function SimpleBackdrop(props) {\r\n  const classes = useStyles();\r\n  const {open, setOpen, message} = props;\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n        <Box>{message}</Box>\r\n    </Backdrop>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router';\r\nimport Loading from '../Loading';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst injectTokenQueryParamenter = token => {\r\n  console.log('injectTokenQueryParamenter:', token)\r\n  axios.defaults.params = {\r\n    ...axios.defaults.params,\r\n    accessToken: token\r\n  }\r\n}\r\n\r\nfunction Login(props) {\r\n  const {\r\n    setTokenValid,\r\n    showAlert,\r\n    useAccessTokenIn\r\n  } = props;\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [userId, setUserId] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [accessTokenExpire, setAccessTokenExpire] = React.useState(10);\r\n  const [refreshTokenExpire, setRefreshTokenExpire] = React.useState(60);\r\n  const [isFetching, setIsFetching] = React.useState(false);\r\n\r\n  const onChangeId = event => setUserId(event.target.value);\r\n  const onChangePassword = event => setPassword(event.target.value);\r\n\r\n  const onKeyUp = event => {\r\n    if(event.keyCode === 13){\r\n      onSubmit();\r\n    }\r\n  }\r\n\r\n  const returnAccessTokenBy = 'body'; // cookie\r\n  const getAccessTokenFromBody = res => res.data.accessToken;\r\n  const injectAccessToken = {\r\n    'query' : injectTokenQueryParamenter,\r\n    'cookie' : () => {},\r\n    'header' : () => {}\r\n  }\r\n\r\n  const onChangeAccessTokenExp = event => {\r\n    console.log(event.target.value);\r\n    if(event.target.value === ''){\r\n      setAccessTokenExpire(0);\r\n      return\r\n    }\r\n    if(!isNaN(parseInt(event.target.value))){\r\n      setAccessTokenExpire(parseInt(event.target.value));\r\n    }\r\n  }\r\n  \r\n  const onChangeRefreshTokenExp = event => {\r\n    console.log(event.target.value);\r\n    if(event.target.value === ''){\r\n      setRefreshTokenExpire(0);\r\n      return\r\n    }\r\n    if(!isNaN(parseInt(event.target.value))){\r\n      setRefreshTokenExpire(parseInt(event.target.value));\r\n    }\r\n  }\r\n\r\n\r\n  const onSubmit = event => {\r\n    console.log('submit:', userId, password);\r\n    setIsFetching(true);\r\n    setTimeout(() => {\r\n      axios.post('/login', {\r\n          username: userId,\r\n          password: password,\r\n          expAccess: accessTokenExpire,\r\n          expRefresh: refreshTokenExpire,\r\n          returnAccessTokenBy\r\n      }).\r\n      then(res => {\r\n          console.log(res.data);\r\n          const {authenticated, errMsg} = res.data;\r\n          if(authenticated === true){\r\n            if(returnAccessTokenBy === 'body'){\r\n              const accessToken = getAccessTokenFromBody(res);  \r\n              const setupRequest = injectAccessToken[useAccessTokenIn];\r\n              setupRequest(accessToken);\r\n            }\r\n            setTokenValid(true)\r\n            history.push('/pages/private/portal');\r\n            setIsFetching(false)\r\n            showAlert({severity:'success', message: 'login success!'})\r\n            return;\r\n          }\r\n          setIsFetching(false)\r\n          showAlert({severity:'error', message: errMsg})\r\n      })\r\n      .catch(err => {\r\n          console.error(err)\r\n          setIsFetching(false)\r\n      })\r\n    }, 1000)\r\n\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      {isFetching && <Loading open={isFetching} message={\"Check Authenticated..\"}></Loading> }\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <div className={classes.div} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={userId}\r\n            onChange={onChangeId}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onChange={onChangePassword}\r\n            onKeyDown={onKeyUp}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={onSubmit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      <Paper width=\"90%\">\r\n        <Box p=\"10px\" fontSize=\"12px\" mt=\"10px\">\r\n          <Box display=\"flex\" alignItems=\"center\" width=\"100%\">\r\n            <Box width=\"100%\">Access Token Expires in(sec)</Box>\r\n            <Box width=\"100%\">\r\n              <TextField variant=\"outlined\" size=\"small\" margin=\"dense\" value={accessTokenExpire} onChange={onChangeAccessTokenExp}></TextField>\r\n            </Box>\r\n          </Box>\r\n          <Box display=\"flex\" alignItems=\"center\" width=\"100%\">\r\n            <Box width=\"100%\">Refresh Token Expires in(sec)</Box>\r\n            <Box width=\"100%\">\r\n              <TextField variant=\"outlined\" size=\"small\" margin=\"dense\" value={refreshTokenExpire} onChange={onChangeRefreshTokenExp}></TextField>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default React.memo(Login)","import React from 'react'\r\nimport Box from '@material-ui/core/Box'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport axios from 'axios';\r\n\r\nfunction Benchmark() {\r\n\r\n    const [reqCount, setReqCount] = React.useState(100);\r\n    const [reqStatus, setReqStatus] = React.useState('stopped');\r\n    const [publicResult, setPublicResult] = React.useState('No Result');\r\n    const [privateResult, setPublicPrivate] = React.useState('No Result');\r\n\r\n    const onChangeReqCount = event => {\r\n        setReqCount(event.target.value);\r\n    }\r\n\r\n    function* mkCounter(max){\r\n        let current = 0;\r\n        while(current < max){\r\n            yield current;\r\n            current += 1;\r\n        }\r\n    }\r\n\r\n    const requestPublic = reqId => {\r\n        return axios.get(`/public/echo/${reqId}`)\r\n    }\r\n\r\n    const runReqPublic = React.useCallback(async () => {\r\n        const reqNumbers = mkCounter(reqCount);\r\n        const startTime = Date.now();\r\n        setReqStatus('public-start');\r\n        for await (let reqId of reqNumbers){\r\n            await requestPublic(reqId); \r\n        }\r\n        const elapsed = Date.now() - startTime;\r\n        setPublicResult(elapsed);\r\n        setReqStatus('stopped');\r\n    },[])\r\n\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\" m=\"15px\">\r\n            <Box>\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    label=\"request count\" \r\n                    margin=\"dense\" \r\n                    size=\"small\"\r\n                    value={reqCount}\r\n                    onChange={onChangeReqCount}\r\n                ></TextField>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" m=\"5px\"> \r\n                <Box width=\"60px\">Public</Box>\r\n                <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={runReqPublic}>Start</Button>\r\n                <Box width=\"auto\" ml=\"10px\">Result: {publicResult}</Box>\r\n\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" m=\"5px\">\r\n                <Box width=\"60px\">Private</Box>\r\n                <Button variant=\"contained\" size=\"small\" color=\"primary\">Start</Button>\r\n                <Box width=\"auto\" ml=\"10px\">Result: {privateResult}</Box>\r\n\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default React.memo(Benchmark)\r\n","import React from 'react';\r\nimport {useParams, NavLink} from 'react-router-dom';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport BenchMark from './BenchMark';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport axios from 'axios';\r\n\r\nfunction Protected(props) {\r\n    // console.log('Protected re-render: ', props);\r\n    const {\r\n        history\r\n    } = props;\r\n    const {resource} = useParams();\r\n    const [isFetching, setIsFetching] = React.useState(true);\r\n    const [accessTokenDecoded, setAccessTokenDecoded] = React.useState({});\r\n    const [refreshTokenDecoded, setRefreshTokenDecoded] = React.useState({});\r\n    const [accessRemainSeconds, setAccessRemainSeconds] = React.useState('calculating...');\r\n    const [refreshRemainSeconds, setRefreshRemainSeconds] = React.useState('calculating...');\r\n    React.useEffect(() => {\r\n        let expAccessTimer, expRefreshTimer;\r\n        axios.get('/private')\r\n        .then(res => {\r\n            console.log(res);\r\n            const {refreshTokenDecoded, accessTokenDecoded} = res.data;\r\n            const origAccessToken = refreshTokenDecoded.accessToken;\r\n\r\n            refreshTokenDecoded.accessToken = \r\n            origAccessToken.substr(1,10) + \r\n            '...' +  \r\n            origAccessToken.substr(origAccessToken.length -5)\r\n            \r\n            const accessTokenExp = accessTokenDecoded.exp;\r\n            const refreshTokenExp = refreshTokenDecoded.exp;\r\n            setAccessTokenDecoded(accessTokenDecoded);\r\n            setRefreshTokenDecoded(refreshTokenDecoded);\r\n            setIsFetching(false);\r\n            expAccessTimer = setInterval(() => {\r\n                const remainSec = parseInt((accessTokenExp*1000 - Date.now())/1000).toFixed(0);\r\n                if(remainSec <= 0) {\r\n                    setAccessRemainSeconds('expired');\r\n                    return\r\n                }\r\n                setAccessRemainSeconds(remainSec);\r\n            },1000)\r\n            expRefreshTimer = setInterval(() => {\r\n                const remainSec = parseInt((refreshTokenExp*1000 - Date.now())/1000).toFixed(0);\r\n                if(remainSec <= 0) {\r\n                    setRefreshRemainSeconds('expired');\r\n                    return\r\n                }\r\n                setRefreshRemainSeconds(remainSec);\r\n            },1000)\r\n        })\r\n        .catch(err => {\r\n            setIsFetching(false);\r\n            console.log(err)\r\n        })\r\n        return () => {\r\n            console.log('dismount Protected')\r\n            clearInterval(expAccessTimer);\r\n        }\r\n    },[resource])\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\" m=\"auto\" mt=\"80px\" width=\"40%\">\r\n            {isFetching === false &&      \r\n            <React.Fragment>\r\n                <Box display=\"flex\" mb=\"10px\">\r\n                    <Box display=\"flex\" flexDirection=\"column\" width=\"50%\" m=\"5px\">\r\n                        <Box color={accessRemainSeconds==='expired' && 'red'} mb=\"5px\">Access Token: remains [{accessRemainSeconds}]</Box>\r\n                        <Paper elevation={3}>\r\n                            {Object.entries(accessTokenDecoded).map(([key, value]) => {\r\n                                return (\r\n                                    <Box p=\"5px\" display=\"flex\">\r\n                                            <Box>{key} :</Box>\r\n                                            <Box>{value}</Box>\r\n                                    </Box>\r\n                                )\r\n                            })}\r\n                        </Paper>\r\n                    </Box>\r\n                    <Box display=\"flex\" flexDirection=\"column\" width=\"50%\" m=\"5px\">\r\n                        <Box color={refreshRemainSeconds==='expired' && 'red'} mb=\"5px\">Refresh Token: remains [{refreshRemainSeconds}]</Box>\r\n                        <Paper elevation={3}>\r\n                            {Object.entries(refreshTokenDecoded).map(([key, value]) => {\r\n                                return (\r\n                                    <Box p=\"5px\" display=\"flex\">\r\n                                            <Box>{key} :</Box>\r\n                                            <Box>{value}</Box>\r\n                                    </Box>\r\n                                )\r\n                            })}\r\n                        </Paper>\r\n                    </Box>\r\n                </Box>\r\n\r\n\r\n                <Divider/>\r\n                <Box fontSize=\"30px\" mt=\"10px\">\r\n                    {resource} page\r\n                </Box>\r\n                <Box>\r\n                    <Box><NavLink to=\"/pages/private/portal\">Portal</NavLink></Box>\r\n                    <Box><NavLink to=\"/pages/private/mail\">Mail</NavLink></Box>\r\n                    <Box><NavLink to=\"/pages/private/userInfo\">UserInfo</NavLink></Box>\r\n                    <Box><NavLink to=\"/pages/private/benchmark\">Benchmark</NavLink></Box>\r\n                </Box>\r\n                {resource === 'benchmark' && <BenchMark></BenchMark>}\r\n            </React.Fragment>\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default React.memo(Protected)","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CustomizedSnackbars(props) {\r\n  const classes = useStyles();\r\n  const {openAlert, setOpenAlert, severity='info', alertMessage=''} = props;\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpenAlert(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={openAlert} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert severity={severity} onClose={handleClose}>{alertMessage}</Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport {Route, Switch, useHistory} from 'react-router-dom';\r\nimport Box from '@material-ui/core/Box'\r\nimport AuthRoute from './AuthRoute';\r\nimport {Login, Protected} from './pages';\r\nimport Loading from './Loading';\r\nimport Alert from './Alert';\r\nimport axios from 'axios';\r\n\r\nexport default function App(props) {\r\n  console.log('App re-render:', props);\r\n  const history = useHistory();\r\n\r\n  const axiosRedirectSetup = options => {\r\n    const {axios,  errStatusCode, redirectUrl} = options;\r\n    axios.interceptors.response.use(\r\n      function(response){\r\n        return response;\r\n      },\r\n      async function(error){\r\n        console.log(error.response)\r\n        if(error.response.status === errStatusCode.refreshTokenExpires){\r\n          history.push(redirectUrl);\r\n          return Promise.reject(error);\r\n        }\r\n        if(error.response.status === errStatusCode.accessTokenExpires){\r\n          const response = await axios.post('/refreshToken', {returnAccessTokenBy: 'body'});\r\n          const {success, accessToken} = response.data;\r\n          if(success){\r\n            axios.defaults.params = {\r\n              ...axios.defaults.params,\r\n              accessToken\r\n            }\r\n            const {params, ...rest} = error.config;\r\n            const originalRequestConfig = {\r\n              params: {...params, accessToken},\r\n              ...rest\r\n            }   \r\n            const origResponse = await axios.request(originalRequestConfig);\r\n            return origResponse;       \r\n          }\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  const axiosRedirectRelease = interceptor => {\r\n    axios.interceptors.response.eject(interceptor);\r\n  }\r\n\r\n  const [isFetching, setIsFetching] = React.useState(true);\r\n  const [tokenValid, setTokenValid] = React.useState(false);\r\n  const [openAlert, setOpenAlert] = React.useState(false);\r\n  const [alertMessage, setAlertMessage] = React.useState('');\r\n  const [alertSeverity, setAlertSevirity] = React.useState('info');\r\n  const [useAccessTokenIn, setUseAccessTokenIn] = React.useState('query')\r\n\r\n  React.useEffect(() => {\r\n    axios.defaults.params = {\r\n      ...axios.defaults.params,\r\n      useAccessTokenIn\r\n    }\r\n  },[useAccessTokenIn])\r\n\r\n  React.useEffect(() => {\r\n    const errStatusCode = {\r\n      'refreshTokenExpires': 401,\r\n      'accessTokenExpires': 499\r\n    }\r\n    const interceptor = axiosRedirectSetup({axios, errStatusCode, redirectUrl:'/pages/login'})\r\n    axios.get('/decodeToken')\r\n    .then(res => {\r\n        const authenticated = res.data;\r\n        if(authenticated){\r\n            setTimeout(() => {\r\n              setTokenValid(true);\r\n              setIsFetching(false);\r\n            },500)\r\n\r\n        }\r\n    })\r\n    .catch(err => {\r\n        setTimeout(() => {\r\n          showAlert({severity:'error', message: err.message})\r\n          setTokenValid(false)\r\n          setIsFetching(false);\r\n        }, 500)\r\n\r\n    })\r\n\r\n    return () => {\r\n      axiosRedirectRelease(interceptor)\r\n    }\r\n  },[]) \r\n\r\n  const showAlert = options => {\r\n    const {message, severity} = options;\r\n    setAlertMessage(message);\r\n    setAlertSevirity(severity);\r\n    setOpenAlert(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {isFetching ? \r\n        <Loading open={isFetching} message={\"Check Authenticated..\"}></Loading> :\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Login showAlert={showAlert} setTokenValid={setTokenValid} useAccessTokenIn={useAccessTokenIn}></Login> \r\n          </Route> \r\n          <Route exact path=\"/pages/login\">\r\n            <Login showAlert={showAlert} setTokenValid={setTokenValid} useAccessTokenIn={useAccessTokenIn}></Login>\r\n          </Route>\r\n          <AuthRoute \r\n            tokenValid={tokenValid} \r\n            setTokenValid={setTokenValid} \r\n            showAlert={showAlert} \r\n            path=\"/pages/private/:resource\"\r\n          >\r\n            <Protected></Protected>\r\n          </AuthRoute>\r\n        </Switch>\r\n      }\r\n      <Alert\r\n        openAlert={openAlert}\r\n        setOpenAlert={setOpenAlert}\r\n        alertMessage={alertMessage}\r\n        severity={alertSeverity}\r\n      ></Alert>\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport App from './App';\r\n\r\nfunction Root() {\r\n    return (\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default React.memo(Root)\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}